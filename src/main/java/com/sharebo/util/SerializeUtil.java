package com.sharebo.util;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
/**
 * 序列化与反序列化
 * @author niewei
 *
 */
public class SerializeUtil {
    /**
     * 序列化
     * @param object  需要序列化的对象
     * @return  返回byte数组
     */
    public static byte[] serialize(Object object) {
        ObjectOutputStream oos = null;
        ByteArrayOutputStream baos = null;
        try {
            // 序列化
            baos = new ByteArrayOutputStream();
            oos = new ObjectOutputStream(baos);
            oos.writeObject(object);
            byte[] bytes = baos.toByteArray();
            return bytes;
        } catch (Exception e) {
        	System.out.println("序列化对象异常！");
        	e.printStackTrace();
        }
        return null;
    }

   /***
    * 反序列化
    * @param bytes  需要序列化的字节数
    * @return 对象
    */
    public static Object unserialize(byte[] bytes) {
        ByteArrayInputStream bais = null;
        try {
            // 反序列化
            bais = new ByteArrayInputStream(bytes);
            ObjectInputStream ois = new ObjectInputStream(bais);
            return ois.readObject();
        } catch (Exception e) {
        	System.out.println("对象不存在。。。");
        	return null;
        }
    }
}